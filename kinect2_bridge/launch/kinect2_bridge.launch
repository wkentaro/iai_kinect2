<launch>

  <arg name="base_name"         default="kinect2"/>
  <arg name="sensor"            default="" />
  <arg name="publish_tf"        default="false" />
  <arg name="base_name_tf"      default="$(arg base_name)" />
  <arg name="fps_limit"         default="-1.0"/>
  <arg name="calib_path"        default="$(find kinect2_bridge)/data/"/>
  <arg name="use_png"           default="false"/>
  <arg name="jpeg_quality"      default="90"/>
  <arg name="png_level"         default="1"/>
  <arg name="depth_method"      default="default"/>
  <arg name="depth_device"      default="-1"/>
  <arg name="reg_method"        default="default"/>
  <arg name="reg_devive"        default="-1"/>
  <arg name="max_depth"         default="12.0"/>
  <arg name="min_depth"         default="0.1"/>
  <arg name="queue_size"        default="5"/>
  <arg name="bilateral_filter"  default="true"/>
  <arg name="edge_aware_filter" default="true"/>
  <arg name="worker_threads"    default="4"/>
  <arg name="machine"           default="localhost" />
  <arg name="use_machine"       default="true" />

  <machine name="localhost" address="localhost" if="$(arg use_machine)"/>

  <node name="$(arg base_name)"
        pkg="jsk_topic_tools" type="standalone_complexed_nodelet"
        respawn="true" output="screen"
        machine="$(arg machine)">
    <rosparam subst_value="true">
      nodelets:
        - name: $(arg base_name)_bridge
          type: kinect2_bridge/kinect2_bridge_nodelet
        - name: $(arg base_name)_points_xyzrgb_sd
          type: depth_image_proc/point_cloud_xyzrgb
          remappings:
            - from: rgb/camera_info
              to: $(arg base_name)/sd/camera_info
            - from: rgb/image_rect_color
              to: $(arg base_name)/sd/image_color_rect
            - from: depth_registered/image_rect
              to: $(arg base_name)/sd/image_depth_rect
            - from: depth_registered/points
              to: $(arg base_name)/sd/points
        - name: $(arg base_name)_points_xyzrgb_qhd
          type: depth_image_proc/point_cloud_xyzrgb
          remappings:
            - from: rgb/camera_info
              to: $(arg base_name)/qhd/camera_info
            - from: rgb/image_rect_color
              to: $(arg base_name)/qhd/image_color_rect
            - from: depth_registered/image_rect
              to: $(arg base_name)/qhd/image_depth_rect
            - from: depth_registered/points
              to: $(arg base_name)/qhd/points
        - name: $(arg base_name)_points_xyzrgb_hd
          type: depth_image_proc/point_cloud_xyzrgb
          remappings:
            - from: rgb/camera_info
              to: $(arg base_name)/hd/camera_info
            - from: rgb/image_rect_color
              to: $(arg base_name)/hd/image_color_rect
            - from: depth_registered/image_rect
              to: $(arg base_name)/hd/image_depth_rect
            - from: depth_registered/points
              to: $(arg base_name)/hd/points
    </rosparam>
  </node>
  <group ns="$(arg base_name)_bridge">
    <param name="base_name"         type="str"    value="$(arg base_name)"/>
    <param name="sensor"            type="str"    value="$(arg sensor)"/>
    <param name="publish_tf"        type="bool"   value="$(arg publish_tf)"/>
    <param name="base_name_tf"      type="str"    value="$(arg base_name_tf)"/>
    <param name="fps_limit"         type="double" value="$(arg fps_limit)"/>
    <param name="calib_path"        type="str"    value="$(arg calib_path)"/>
    <param name="use_png"           type="bool"   value="$(arg use_png)"/>
    <param name="jpeg_quality"      type="int"    value="$(arg jpeg_quality)"/>
    <param name="png_level"         type="int"    value="$(arg png_level)"/>
    <param name="depth_method"      type="str"    value="$(arg depth_method)"/>
    <param name="depth_device"      type="int"    value="$(arg depth_device)"/>
    <param name="reg_method"        type="str"    value="$(arg reg_method)"/>
    <param name="reg_devive"        type="int"    value="$(arg reg_devive)"/>
    <param name="max_depth"         type="double" value="$(arg max_depth)"/>
    <param name="min_depth"         type="double" value="$(arg min_depth)"/>
    <param name="queue_size"        type="int"    value="$(arg queue_size)"/>
    <param name="bilateral_filter"  type="bool"   value="$(arg bilateral_filter)"/>
    <param name="edge_aware_filter" type="bool"   value="$(arg edge_aware_filter)"/>
    <param name="worker_threads"    type="int"    value="$(arg worker_threads)"/>
  </group>
  <!-- sd point cloud (512 x 424) -->
  <group ns="$(arg base_name)_points_xyzrgb_sd">
    <param name="queue_size" type="int" value="$(arg queue_size)" />
  </group>
  <!-- qhd point cloud (960 x 540) -->
  <group ns="$(arg base_name)_points_xyzrgb_qhd">
    <param name="queue_size" type="int" value="$(arg queue_size)" />
  </group>
  <!-- hd point cloud (1920 x 1080) -->
  <group ns="$(arg base_name)_points_xyzrgb_hd">
    <param name="queue_size" type="int" value="$(arg queue_size)" />
  </group>

</launch>
